name: Run pytest on dev branch

on:
  pull_request:
    branches:
      - dev

jobs:
  pytest:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Start localstack
        run: docker-compose up -d localstack

      - name: Run pytest
        id: pytest
        run: |
          pytest --junitxml=test-results.xml
          pip install -q junit2html
          junit2html test-results.xml pytest_report.html

      - name: Comment PR with pytest report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'pytest_report.html');
            const reportContent = fs.readFileSync(reportPath, 'utf8');
            const comment = `<!DOCTYPE html><html><body>${reportContent}</body></html>`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })

      - name: Set workflow status
        if: ${{ steps.pytest.outcome == 'success' }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.actions.createOrUpdateCheckRun({
              name: 'pytest',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'All tests passed',
                summary: 'All tests passed successfully.'
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
